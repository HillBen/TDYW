@using TDYW.Models
@model PaginatedList<Pool>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

@using (Html.BeginForm("Index", "Pools", FormMethod.Get)){
<div>
    <p>
        <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
        <input type="submit" value="Search" class="btn btn-default" /> |
        <a asp-action="Index">Back to Full List</a>
    </p>
</div>
}

<table class="table">
    <thead>
        <tr>
            <th>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Start Date</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.Private)
                    {
                        <span aria-hidden="true" class="glyphicon glyphicon-lock"></span>
                    }
                    else
                    {
                        <span aria-hidden="true" class="glyphicon glyphicon-globe"></span>
                    }
                    @if (item.GameIsOver())
                    {
                        <span aria-hidden="true" class="glyphicon glyphicon-flag"></span>
                    }
                    else if (item.GameIsOn())
                    {
                        <span aria-hidden="true" class="glyphicon glyphicon-road"></span>
                    }
                    else
                    {
                        <span aria-hidden="true" class="glyphicon glyphicon-hourglass"></span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                    @if (item.UserIsPlaying(User.Identity.Name))
                    {
                        <span> | </span><a asp-action="Delete" asp-route-id="@item.Id">Delete</a>

                    }
                     <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

