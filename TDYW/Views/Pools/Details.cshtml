@model TDYW.Models.Pool

@{
    ViewData["Title"] = "Details";
    string userId = (string)ViewData["userId"];
}


<h2>Pool Details</h2>

<div>
    @if (Model.IsPreGame())
    {
        @if (Model.UserId == userId)
        {
            @Html.ActionLink("Edit Pool", "Edit", "Pools", new { @id = Model.Id })
            @Html.ActionLink("Invite Players", "Index", "Invitations", new { @id = Model.Id })
        }
        @if (Model.UserIsPlaying(userId))
        {
            //this user is playing in this pool
            //<h3>Your Picks</h3>
            //@await Html.PartialAsync("_PartialPicks",thisPlayer.Picks)
            @Html.ActionLink("Edit Picks", "Join", "Pools", new { @id = Model.Id })
        }
        else if (Model.UserId == userId || Model.Private == false)
        {
            @Html.ActionLink("Join Pool", "Join", "Pools", new { @id = Model.Id })
        }
    }
    <a asp-action="Index">Back to List</a>

</div>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Private)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Private)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OpenEnrollment)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OpenEnrollment)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PicksPerPlayer)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PicksPerPlayer)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OversPerPlayer)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OversPerPlayer)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AllowPluralityVote)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AllowPluralityVote)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RequireTwoThirdsVote)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RequireTwoThirdsVote)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.FixedAgeBonus)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FixedAgeBonus)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.FixedAgeBonusMinuend)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FixedAgeBonusMinuend)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.WeightedAgeBonus)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.WeightedAgeBonus)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.WeightedAgeBonusFactor)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.WeightedAgeBonusFactor)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.WeightedRankBonus)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.WeightedRankBonus)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.WeightedRankBonusFactor)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.WeightedRankBonusFactor)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.FixedRankBonus)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FixedRankBonus)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.FixedRankBonusFactor)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FixedRankBonusFactor)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Owner)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Owner.Id)
        </dd>
    </dl>

</div>

<h2>Players</h2>
@await Html.PartialAsync("_PartialPlayers", Model.Players)




